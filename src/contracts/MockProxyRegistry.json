{
  "contractName": "MockProxyRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proxies",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxyForAddress",
          "type": "address"
        }
      ],
      "name": "setProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proxies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxyForAddress\",\"type\":\"address\"}],\"name\":\"setProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple mock ProxyRegistry for use in local tests with minimal security\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setProxy(address,address)\":{\"params\":{\"_address\":\"The address that the proxy will act on behalf of\",\"_proxyForAddress\":\"The proxy that will act on behalf of the address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxy(address,address)\":{\"notice\":\"Allow the owner to set a proxy for testing\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/Optimusfox/1111 abosch/contracts/test/MockProxyRegistry.sol\":\"MockProxyRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Optimusfox/1111 abosch/contracts/test/MockProxyRegistry.sol\":{\"keccak256\":\"0x7901851439df13812ae8c8c4dd8993f220460cc8f5c3559c54f5a9790b3863a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17cfc63534e56115b2caaaa30d9681f03275e68780dc7f637a0519365581a413\",\"dweb:/ipfs/QmUwYjBN8bm4suR6EHk79dB5sBThkVc64wT7LcRHmDvkKJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106ac8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a9d4630c14610084578063c4552791146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610174565b60405161007b91906105c1565b60405180910390f35b61009e600480360381019061009991906104d0565b61019d565b005b6100ba60048036038101906100b591906104a7565b61029b565b6040516100c791906105c1565b60405180910390f35b6100ea60048036038101906100e591906104a7565b6102ce565b005b6100f46103c6565b73ffffffffffffffffffffffffffffffffffffffff16610112610174565b73ffffffffffffffffffffffffffffffffffffffff1614610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f906105fc565b60405180910390fd5b61017260006103ce565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a56103c6565b73ffffffffffffffffffffffffffffffffffffffff166101c3610174565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610210906105fc565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d66103c6565b73ffffffffffffffffffffffffffffffffffffffff166102f4610174565b73ffffffffffffffffffffffffffffffffffffffff161461034a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610341906105fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b1906105dc565b60405180910390fd5b6103c3816103ce565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506104a18161065f565b92915050565b6000602082840312156104b957600080fd5b60006104c784828501610492565b91505092915050565b600080604083850312156104e357600080fd5b60006104f185828601610492565b925050602061050285828601610492565b9150509250929050565b6105158161062d565b82525050565b600061052860268361061c565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061058e60208361061c565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506105d6600083018461050c565b92915050565b600060208201905081810360008301526105f58161051b565b9050919050565b6000602082019050818103600083015261061581610581565b9050919050565b600082825260208201905092915050565b60006106388261063f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6106688161062d565b811461067357600080fd5b5056fea264697066735822122084fb0d536b6a809c7a0ce3a52b29295934cdaa8b74c5933847218b3c38404fad64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a9d4630c14610084578063c4552791146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610174565b60405161007b91906105c1565b60405180910390f35b61009e600480360381019061009991906104d0565b61019d565b005b6100ba60048036038101906100b591906104a7565b61029b565b6040516100c791906105c1565b60405180910390f35b6100ea60048036038101906100e591906104a7565b6102ce565b005b6100f46103c6565b73ffffffffffffffffffffffffffffffffffffffff16610112610174565b73ffffffffffffffffffffffffffffffffffffffff1614610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f906105fc565b60405180910390fd5b61017260006103ce565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a56103c6565b73ffffffffffffffffffffffffffffffffffffffff166101c3610174565b73ffffffffffffffffffffffffffffffffffffffff1614610219576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610210906105fc565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102d66103c6565b73ffffffffffffffffffffffffffffffffffffffff166102f4610174565b73ffffffffffffffffffffffffffffffffffffffff161461034a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610341906105fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b1906105dc565b60405180910390fd5b6103c3816103ce565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506104a18161065f565b92915050565b6000602082840312156104b957600080fd5b60006104c784828501610492565b91505092915050565b600080604083850312156104e357600080fd5b60006104f185828601610492565b925050602061050285828601610492565b9150509250929050565b6105158161062d565b82525050565b600061052860268361061c565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061058e60208361061c565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506105d6600083018461050c565b92915050565b600060208201905081810360008301526105f58161051b565b9050919050565b6000602082019050818103600083015261061581610581565b9050919050565b600082825260208201905092915050565b60006106388261063f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6106688161062d565b811461067357600080fd5b5056fea264697066735822122084fb0d536b6a809c7a0ce3a52b29295934cdaa8b74c5933847218b3c38404fad64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3281:26",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:26"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:26",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:26",
                "type": ""
              }
            ],
            "src": "7:139:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:26",
                "type": ""
              }
            ],
            "src": "152:262:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:324:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "558:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:26"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "575:117:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "590:15:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:1:26",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "594:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "619:63:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "654:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "665:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "650:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "650:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "674:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "629:20:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "629:53:26"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "619:6:26"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "702:118:26",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "717:16:26",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:2:26",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "721:6:26",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "747:63:26",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "782:9:26"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "778:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:22:26"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "802:7:26"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "757:20:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:53:26"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "747:6:26"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "465:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "476:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "496:6:26",
                "type": ""
              }
            ],
            "src": "420:407:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:53:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:26"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "920:17:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:24:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:37:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:37:26"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:26",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "893:3:26",
                "type": ""
              }
            ],
            "src": "833:118:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1103:224:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:74:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1179:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1184:2:26",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1120:58:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1120:67:26"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1113:3:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1208:3:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1213:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1204:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1204:11:26"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1217:34:26",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1197:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:55:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1197:55:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1273:3:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1278:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:12:26"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1283:8:26",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1262:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1262:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1262:30:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1302:19:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1313:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1309:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:12:26"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1302:3:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1091:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1099:3:26",
                "type": ""
              }
            ],
            "src": "957:370:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:184:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:74:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1555:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1560:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1496:58:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1496:67:26"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1489:3:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1584:3:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1589:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:11:26"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1593:34:26",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1573:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1573:55:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1573:55:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1638:19:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1649:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1654:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1645:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:12:26"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1638:3:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1467:3:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1475:3:26",
                "type": ""
              }
            ],
            "src": "1333:330:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1767:124:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1777:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1789:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1800:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1785:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1785:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1777:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1857:6:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1870:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1881:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1866:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1866:17:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1813:43:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:71:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1813:71:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1739:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1751:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1762:4:26",
                "type": ""
              }
            ],
            "src": "1669:222:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2068:248:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2078:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2090:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2101:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2086:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2078:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2125:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2136:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2121:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:17:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2144:4:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2150:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2140:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2140:20:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2114:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2114:47:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2114:47:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2170:139:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2304:4:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2178:124:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2178:131:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2170:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2048:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2063:4:26",
                "type": ""
              }
            ],
            "src": "1897:419:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2493:248:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2503:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2515:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2526:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2511:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2503:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2550:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2561:1:26",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2546:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2546:17:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2569:4:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2575:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2565:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2565:20:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2539:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:47:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2539:47:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2595:139:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2729:4:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2603:124:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2603:131:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2595:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2473:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2488:4:26",
                "type": ""
              }
            ],
            "src": "2322:419:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2843:73:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2860:3:26"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2865:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2853:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:19:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2853:19:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2881:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2900:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2905:4:26",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2896:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:14:26"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2881:11:26"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2815:3:26",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2820:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2831:11:26",
                "type": ""
              }
            ],
            "src": "2747:169:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2967:51:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2977:35:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3006:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2988:17:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2988:24:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2977:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2949:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2959:7:26",
                "type": ""
              }
            ],
            "src": "2922:96:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3069:81:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3079:65:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3094:5:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:42:26",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3090:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3090:54:26"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3079:7:26"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3051:5:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3061:7:26",
                "type": ""
              }
            ],
            "src": "3024:126:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3199:79:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3256:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3265:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3268:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3258:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3258:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3258:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3222:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3247:5:26"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3229:17:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3229:24:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3219:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3219:35:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3212:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:43:26"
                  },
                  "nodeType": "YulIf",
                  "src": "3209:2:26"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3192:5:26",
                "type": ""
              }
            ],
            "src": "3156:122:26"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "204:615:20:-:0;;;;;;;;;;;;;867:23:21;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;204:615:20;;587:96:23;640:7;666:10;659:17;;587:96;:::o;2041:169:21:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;204:615:20:-;;;;;;;",
  "deployedSourceMap": "204:615:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1605:92:21;;;:::i;:::-;;973:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:156:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;248:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1605:92;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;661:156:20:-;1196:12:21;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;794:16:20::1;774:7;:17;782:8;774:17;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;661:156:::0;;:::o;248:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1846:189:21:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:23:-;640:7;666:10;659:17;;587:96;:::o;2041:169:21:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:139:26:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:407::-;;;545:2;533:9;524:7;520:23;516:32;513:2;;;561:1;558;551:12;513:2;604:1;629:53;674:7;665:6;654:9;650:22;629:53;:::i;:::-;619:63;;575:117;731:2;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;702:118;503:324;;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:370::-;;1120:67;1184:2;1179:3;1120:67;:::i;:::-;1113:74;;1217:34;1213:1;1208:3;1204:11;1197:55;1283:8;1278:2;1273:3;1269:12;1262:30;1318:2;1313:3;1309:12;1302:19;;1103:224;;;:::o;1333:330::-;;1496:67;1560:2;1555:3;1496:67;:::i;:::-;1489:74;;1593:34;1589:1;1584:3;1580:11;1573:55;1654:2;1649:3;1645:12;1638:19;;1479:184;;;:::o;1669:222::-;;1800:2;1789:9;1785:18;1777:26;;1813:71;1881:1;1870:9;1866:17;1857:6;1813:71;:::i;:::-;1767:124;;;;:::o;1897:419::-;;2101:2;2090:9;2086:18;2078:26;;2150:9;2144:4;2140:20;2136:1;2125:9;2121:17;2114:47;2178:131;2304:4;2178:131;:::i;:::-;2170:139;;2068:248;;;:::o;2322:419::-;;2526:2;2515:9;2511:18;2503:26;;2575:9;2569:4;2565:20;2561:1;2550:9;2546:17;2539:47;2603:131;2729:4;2603:131;:::i;:::-;2595:139;;2493:248;;;:::o;2747:169::-;;2865:6;2860:3;2853:19;2905:4;2900:3;2896:14;2881:29;;2843:73;;;;:::o;2922:96::-;;2988:24;3006:5;2988:24;:::i;:::-;2977:35;;2967:51;;;:::o;3024:126::-;;3101:42;3094:5;3090:54;3079:65;;3069:81;;;:::o;3156:122::-;3229:24;3247:5;3229:24;:::i;:::-;3222:5;3219:35;3209:2;;3268:1;3265;3258:12;3209:2;3199:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @dev A simple mock ProxyRegistry for use in local tests with minimal security\n */\ncontract MockProxyRegistry is Ownable {\n    mapping(address => address) public proxies;\n\n    /***********************************|\n    |  Public Configuration Functions   |\n    |__________________________________*/\n\n    /**\n     * @notice Allow the owner to set a proxy for testing\n     * @param _address           The address that the proxy will act on behalf of\n     * @param _proxyForAddress  The proxy that will act on behalf of the address\n     */\n    function setProxy(address _address, address _proxyForAddress)\n        external\n        onlyOwner()\n    {\n        proxies[_address] = _proxyForAddress;\n    }\n}\n",
  "sourcePath": "E:/Optimusfox/1111 abosch/contracts/test/MockProxyRegistry.sol",
  "ast": {
    "absolutePath": "/E/Optimusfox/1111 abosch/contracts/test/MockProxyRegistry.sol",
    "exportedSymbols": {
      "Context": [
        3828
      ],
      "MockProxyRegistry": [
        3405
      ],
      "Ownable": [
        3509
      ]
    },
    "id": 3406,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3379,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3380,
        "nodeType": "ImportDirective",
        "scope": 3406,
        "sourceUnit": 3510,
        "src": "61:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3382,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3509,
              "src": "234:7:20"
            },
            "id": 3383,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:20"
          }
        ],
        "contractDependencies": [
          3509,
          3828
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3381,
          "nodeType": "StructuredDocumentation",
          "src": "115:88:20",
          "text": " @dev A simple mock ProxyRegistry for use in local tests with minimal security"
        },
        "fullyImplemented": true,
        "id": 3405,
        "linearizedBaseContracts": [
          3405,
          3509,
          3828
        ],
        "name": "MockProxyRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c4552791",
            "id": 3387,
            "mutability": "mutable",
            "name": "proxies",
            "nodeType": "VariableDeclaration",
            "scope": 3405,
            "src": "248:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3386,
              "keyType": {
                "id": 3384,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "248:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 3385,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3403,
              "nodeType": "Block",
              "src": "764:53:20",
              "statements": [
                {
                  "expression": {
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3397,
                        "name": "proxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3387,
                        "src": "774:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3399,
                      "indexExpression": {
                        "id": 3398,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "782:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "774:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3400,
                      "name": "_proxyForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3392,
                      "src": "794:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "774:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "774:36:20"
                }
              ]
            },
            "documentation": {
              "id": 3388,
              "nodeType": "StructuredDocumentation",
              "src": "424:232:20",
              "text": " @notice Allow the owner to set a proxy for testing\n @param _address           The address that the proxy will act on behalf of\n @param _proxyForAddress  The proxy that will act on behalf of the address"
            },
            "functionSelector": "a9d4630c",
            "id": 3404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3395,
                "modifierName": {
                  "id": 3394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3452,
                  "src": "748:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "748:11:20"
              }
            ],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3404,
                  "src": "679:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "_proxyForAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3404,
                  "src": "697:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:44:20"
            },
            "returnParameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:20"
            },
            "scope": 3405,
            "src": "661:156:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3406,
        "src": "204:615:20"
      }
    ],
    "src": "36:784:20"
  },
  "legacyAST": {
    "absolutePath": "/E/Optimusfox/1111 abosch/contracts/test/MockProxyRegistry.sol",
    "exportedSymbols": {
      "Context": [
        3828
      ],
      "MockProxyRegistry": [
        3405
      ],
      "Ownable": [
        3509
      ]
    },
    "id": 3406,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3379,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3380,
        "nodeType": "ImportDirective",
        "scope": 3406,
        "sourceUnit": 3510,
        "src": "61:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3382,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3509,
              "src": "234:7:20"
            },
            "id": 3383,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:20"
          }
        ],
        "contractDependencies": [
          3509,
          3828
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3381,
          "nodeType": "StructuredDocumentation",
          "src": "115:88:20",
          "text": " @dev A simple mock ProxyRegistry for use in local tests with minimal security"
        },
        "fullyImplemented": true,
        "id": 3405,
        "linearizedBaseContracts": [
          3405,
          3509,
          3828
        ],
        "name": "MockProxyRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c4552791",
            "id": 3387,
            "mutability": "mutable",
            "name": "proxies",
            "nodeType": "VariableDeclaration",
            "scope": 3405,
            "src": "248:42:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3386,
              "keyType": {
                "id": 3384,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "248:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 3385,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3403,
              "nodeType": "Block",
              "src": "764:53:20",
              "statements": [
                {
                  "expression": {
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3397,
                        "name": "proxies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3387,
                        "src": "774:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 3399,
                      "indexExpression": {
                        "id": 3398,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "782:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "774:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3400,
                      "name": "_proxyForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3392,
                      "src": "794:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "774:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "774:36:20"
                }
              ]
            },
            "documentation": {
              "id": 3388,
              "nodeType": "StructuredDocumentation",
              "src": "424:232:20",
              "text": " @notice Allow the owner to set a proxy for testing\n @param _address           The address that the proxy will act on behalf of\n @param _proxyForAddress  The proxy that will act on behalf of the address"
            },
            "functionSelector": "a9d4630c",
            "id": 3404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3395,
                "modifierName": {
                  "id": 3394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3452,
                  "src": "748:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "748:11:20"
              }
            ],
            "name": "setProxy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 3404,
                  "src": "679:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "_proxyForAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3404,
                  "src": "697:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:44:20"
            },
            "returnParameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:20"
            },
            "scope": 3405,
            "src": "661:156:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3406,
        "src": "204:615:20"
      }
    ],
    "src": "36:784:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-09-28T11:07:38.286Z",
  "devdoc": {
    "details": "A simple mock ProxyRegistry for use in local tests with minimal security",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setProxy(address,address)": {
        "params": {
          "_address": "The address that the proxy will act on behalf of",
          "_proxyForAddress": "The proxy that will act on behalf of the address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setProxy(address,address)": {
        "notice": "Allow the owner to set a proxy for testing"
      }
    },
    "version": 1
  }
}